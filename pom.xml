<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>pl.kukla.krzys</groupId>
    <artifactId>07-brewery-bom</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>pom</packaging>

    <!-- heere we are overriding default properties from 'Maven->Show Effective POM' to our own like below -->
    <licenses>
        <license>
            <name>GNU General Public License v3.0</name>
            <url>https://www.gnu.org/licenses/gpl.txt</url>
        </license>
    </licenses>

    <organization>
        <name>krzys.kukla@gmail.com</name>
    </organization>

    <developers>
        <developer>
            <name>Krzysztof Kukla</name>
            <organization>krzys.kukla@gmail.com</organization>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <mapstruct.version>1.3.1.Final</mapstruct.version>
        <jaxb.version>2.3.0</jaxb.version>
        <awaitility.version>4.0.2</awaitility.version>
    </properties>

    <!--'dependencyManagement' allows to define specific versions for those dependencies that will be inherit from this parent pom, not management by
    Spring Boot
     they are NOT part of that project, can be only inherit to others -->
    <dependencyManagement>
        <dependencies>
            <!-- old JAXB was removed from standard libraries in Java9, which does exist in Java8
		and if we still want to use it we have to add that explicitly
		Xml stuffs, Jaxb stuffs-->
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${jaxb.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>

    </dependencyManagement>

</project>